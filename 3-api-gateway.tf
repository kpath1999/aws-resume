resource "aws_apigatewayv2_api" "main" {
    name            = "main"    // Name of the API
    protocol_type   = "HTTP"    // API protocol
    cors_configuration {
      allow_headers = ["*"]
      allow_methods = ["POST", "PUT", "DELETE", "GET", "OPTIONS"]
      allow_origins = ["*"]
    }
}

resource "aws_apigatewayv2_stage" "dev" {
    api_id      = aws_apigatewayv2_api.main.id                      // API identifier
    name        = "dev"                                             // Name of the stage
    auto_deploy = true                                              // Updates to the API automatically trigger a new deployment
    access_log_settings {
        destination_arn = aws_cloudwatch_log_group.main_api_gw.arn  // ARN of the logs group that will receive the access logs
        
        // format: Single line format of the access logs of data
        format = jsonencode({
            httpMethod                  = "$context.httpMethod"
            integrationErrorMessage     = "$context.integrationErrorMessage"
            protocol                    = "$context.protocol"
            requestId                   = "$context.requestId"
            requestTime                 = "$context.requestTime"
            resourcePath                = "$context.resourcePath"
            responseLength              = "$context.responseLength"
            routeKey                    = "$context.routeKey"
            sourceIp                    = "$context.identity.sourceIp"
            status                      = "$context.status"
        })
    }
}

// Creating a log group to store the logs generated by the API gateway
resource "aws_cloudwatch_log_group" "main_api_gw" {
    name                = "/aws/api-gw/${aws_apigatewayv2_api.main.name}"
    retention_in_days   = 14
}